"""Initial migration

Revision ID: 0c77f803ad23
Revises: 
Create Date: 2025-10-13 17:40:02.035635

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0c77f803ad23'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configuracao',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chave', sa.String(length=50), nullable=False),
    sa.Column('valor', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chave')
    )
    op.create_table('empresa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=150), nullable=False),
    sa.Column('cnpj', sa.String(length=20), nullable=True),
    sa.Column('endereco', sa.String(length=255), nullable=True),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('contato', sa.String(length=100), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cnpj'),
    sa.UniqueConstraint('nome')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('foto_perfil', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('audit_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_name', sa.String(length=100), nullable=True),
    sa.Column('user_role', sa.String(length=50), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('request_method', sa.String(length=10), nullable=True),
    sa.Column('route', sa.String(length=255), nullable=True),
    sa.Column('module', sa.String(length=50), nullable=True),
    sa.Column('changes', sa.Text(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_log_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_resource_id'), ['resource_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_resource_type'), ['resource_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_log_user_id'), ['user_id'], unique=False)

    op.create_table('bloco',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo_bloco', sa.String(length=50), nullable=False),
    sa.Column('nome_bloco', sa.String(length=150), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=False),
    sa.Column('valor_turno1', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('repasse_turno1', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('valor_turno2', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('repasse_turno2', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('valor_turno3', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('repasse_turno3', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('valor_admin', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('repasse_admin', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo_bloco', 'empresa_id', name='_codigo_bloco_empresa_uc')
    )
    op.create_table('centro_custo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo', sa.String(length=50), nullable=False),
    sa.Column('nome', sa.String(length=150), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo', 'empresa_id', name='_codigo_empresa_uc')
    )
    op.create_table('fin_contas_receber',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_titulo', sa.String(length=50), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('valor_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('data_emissao', sa.Date(), nullable=False),
    sa.Column('data_vencimento', sa.Date(), nullable=False),
    sa.Column('data_recebimento', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('numero_nota_fiscal', sa.String(length=100), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_titulo')
    )
    op.create_table('motorista',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('cpf_cnpj', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('endereco', sa.String(length=100), nullable=True),
    sa.Column('nro', sa.String(length=20), nullable=True),
    sa.Column('bairro', sa.String(length=100), nullable=True),
    sa.Column('cidade', sa.String(length=100), nullable=True),
    sa.Column('uf', sa.String(length=2), nullable=True),
    sa.Column('chave_pix', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('status_disponibilidade', sa.String(length=20), nullable=False),
    sa.Column('data_cadastro', sa.DateTime(), nullable=True),
    sa.Column('veiculo_nome', sa.String(length=100), nullable=True),
    sa.Column('veiculo_placa', sa.String(length=10), nullable=True),
    sa.Column('veiculo_cor', sa.String(length=50), nullable=True),
    sa.Column('veiculo_ano', sa.Integer(), nullable=True),
    sa.Column('veiculo_km', sa.Float(), nullable=True),
    sa.Column('veiculo_obs', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf_cnpj'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_id'),
    sa.UniqueConstraint('veiculo_placa')
    )
    op.create_table('planta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nome', 'empresa_id', name='_nome_empresa_uc')
    )
    op.create_table('bairro',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('cidade', sa.String(length=100), nullable=False),
    sa.Column('bloco_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bloco_id'], ['bloco.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nome', 'cidade', name='_nome_cidade_uc')
    )
    op.create_table('colaborador',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('matricula', sa.String(length=50), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('endereco', sa.String(length=100), nullable=True),
    sa.Column('nro', sa.String(length=20), nullable=True),
    sa.Column('cidade', sa.String(length=100), nullable=True),
    sa.Column('uf', sa.String(length=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('planta_id', sa.Integer(), nullable=False),
    sa.Column('bairro', sa.String(length=100), nullable=True),
    sa.Column('bloco_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bloco_id'], ['bloco.id'], ),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.ForeignKeyConstraint(['planta_id'], ['planta.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('matricula')
    )
    op.create_table('fin_contas_pagar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_titulo', sa.String(length=50), nullable=False),
    sa.Column('motorista_id', sa.Integer(), nullable=False),
    sa.Column('valor_total', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('data_emissao', sa.Date(), nullable=False),
    sa.Column('data_vencimento', sa.Date(), nullable=False),
    sa.Column('data_pagamento', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('forma_pagamento', sa.String(length=50), nullable=True),
    sa.Column('comprovante_pagamento', sa.String(length=255), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['motorista_id'], ['motorista.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('numero_titulo')
    )
    op.create_table('gerente',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('planta_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.ForeignKeyConstraint(['planta_id'], ['planta.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('turno',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('horario_inicio', sa.Time(), nullable=False),
    sa.Column('horario_fim', sa.Time(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('planta_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.ForeignKeyConstraint(['planta_id'], ['planta.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('viagem',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('planta_id', sa.Integer(), nullable=False),
    sa.Column('bloco_id', sa.Integer(), nullable=True),
    sa.Column('blocos_ids', sa.String(length=255), nullable=True),
    sa.Column('tipo_linha', sa.String(length=10), nullable=False),
    sa.Column('tipo_corrida', sa.String(length=20), nullable=False),
    sa.Column('horario_entrada', sa.DateTime(), nullable=True),
    sa.Column('horario_saida', sa.DateTime(), nullable=True),
    sa.Column('horario_desligamento', sa.DateTime(), nullable=True),
    sa.Column('colaboradores_ids', sa.Text(), nullable=True),
    sa.Column('quantidade_passageiros', sa.Integer(), nullable=True),
    sa.Column('motorista_id', sa.Integer(), nullable=True),
    sa.Column('nome_motorista', sa.String(length=150), nullable=True),
    sa.Column('placa_veiculo', sa.String(length=20), nullable=True),
    sa.Column('valor', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('valor_repasse', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('motivo_cancelamento', sa.Text(), nullable=True),
    sa.Column('cancelado_por_user_id', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=False),
    sa.Column('data_inicio', sa.DateTime(), nullable=True),
    sa.Column('data_finalizacao', sa.DateTime(), nullable=True),
    sa.Column('data_cancelamento', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bloco_id'], ['bloco.id'], ),
    sa.ForeignKeyConstraint(['cancelado_por_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.ForeignKeyConstraint(['motorista_id'], ['motorista.id'], ),
    sa.ForeignKeyConstraint(['planta_id'], ['planta.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('colaborador_centro_custo_association',
    sa.Column('colaborador_id', sa.Integer(), nullable=False),
    sa.Column('centro_custo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['centro_custo_id'], ['centro_custo.id'], ),
    sa.ForeignKeyConstraint(['colaborador_id'], ['colaborador.id'], ),
    sa.PrimaryKeyConstraint('colaborador_id', 'centro_custo_id'),
    info={'bind_key': None}
    )
    op.create_table('colaborador_turno_association',
    sa.Column('colaborador_id', sa.Integer(), nullable=False),
    sa.Column('turno_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['colaborador_id'], ['colaborador.id'], ),
    sa.ForeignKeyConstraint(['turno_id'], ['turno.id'], ),
    sa.PrimaryKeyConstraint('colaborador_id', 'turno_id'),
    info={'bind_key': None}
    )
    op.create_table('fin_pagar_viagens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conta_pagar_id', sa.Integer(), nullable=False),
    sa.Column('viagem_id', sa.Integer(), nullable=False),
    sa.Column('valor_repasse', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conta_pagar_id'], ['fin_contas_pagar.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['viagem_id'], ['viagem.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('conta_pagar_id', 'viagem_id', name='_conta_viagem_pagar_uc')
    )
    op.create_table('fin_receber_viagens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conta_receber_id', sa.Integer(), nullable=False),
    sa.Column('viagem_id', sa.Integer(), nullable=False),
    sa.Column('valor_viagem', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conta_receber_id'], ['fin_contas_receber.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['viagem_id'], ['viagem.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('conta_receber_id', 'viagem_id', name='_conta_viagem_receber_uc')
    )
    op.create_table('gerente_centro_custo_association',
    sa.Column('gerente_id', sa.Integer(), nullable=False),
    sa.Column('centro_custo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['centro_custo_id'], ['centro_custo.id'], ),
    sa.ForeignKeyConstraint(['gerente_id'], ['gerente.id'], ),
    sa.PrimaryKeyConstraint('gerente_id', 'centro_custo_id'),
    info={'bind_key': None}
    )
    op.create_table('supervisor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('matricula', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.Column('endereco', sa.String(length=100), nullable=True),
    sa.Column('nro', sa.String(length=20), nullable=True),
    sa.Column('bairro', sa.String(length=100), nullable=True),
    sa.Column('cidade', sa.String(length=100), nullable=True),
    sa.Column('uf', sa.String(length=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('planta_id', sa.Integer(), nullable=False),
    sa.Column('gerente_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.ForeignKeyConstraint(['gerente_id'], ['gerente.id'], ),
    sa.ForeignKeyConstraint(['planta_id'], ['planta.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('matricula'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('viagem_auditoria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('viagem_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_name', sa.String(length=100), nullable=True),
    sa.Column('user_role', sa.String(length=50), nullable=True),
    sa.Column('motorista_id', sa.Integer(), nullable=True),
    sa.Column('motorista_nome', sa.String(length=100), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('status_anterior', sa.String(length=20), nullable=True),
    sa.Column('status_novo', sa.String(length=20), nullable=True),
    sa.Column('changes', sa.Text(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('valor_repasse_anterior', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('valor_repasse_novo', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['motorista_id'], ['motorista.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['viagem_id'], ['viagem.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('viagem_auditoria', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_viagem_auditoria_action'), ['action'], unique=False)
        batch_op.create_index(batch_op.f('ix_viagem_auditoria_motorista_id'), ['motorista_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_viagem_auditoria_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_viagem_auditoria_viagem_id'), ['viagem_id'], unique=False)

    op.create_table('solicitacao',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('colaborador_id', sa.Integer(), nullable=False),
    sa.Column('supervisor_id', sa.Integer(), nullable=False),
    sa.Column('empresa_id', sa.Integer(), nullable=False),
    sa.Column('planta_id', sa.Integer(), nullable=False),
    sa.Column('bloco_id', sa.Integer(), nullable=False),
    sa.Column('tipo_linha', sa.String(length=10), nullable=False),
    sa.Column('tipo_corrida', sa.String(length=20), nullable=False),
    sa.Column('horario_entrada', sa.DateTime(), nullable=True),
    sa.Column('horario_saida', sa.DateTime(), nullable=True),
    sa.Column('horario_desligamento', sa.DateTime(), nullable=True),
    sa.Column('turno_entrada_id', sa.Integer(), nullable=True),
    sa.Column('turno_saida_id', sa.Integer(), nullable=True),
    sa.Column('turno_desligamento_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('viagem_id', sa.Integer(), nullable=True),
    sa.Column('valor', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('valor_repasse', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=False),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['bloco_id'], ['bloco.id'], ),
    sa.ForeignKeyConstraint(['colaborador_id'], ['colaborador.id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['empresa_id'], ['empresa.id'], ),
    sa.ForeignKeyConstraint(['planta_id'], ['planta.id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervisor.id'], ),
    sa.ForeignKeyConstraint(['turno_desligamento_id'], ['turno.id'], ),
    sa.ForeignKeyConstraint(['turno_entrada_id'], ['turno.id'], ),
    sa.ForeignKeyConstraint(['turno_saida_id'], ['turno.id'], ),
    sa.ForeignKeyConstraint(['viagem_id'], ['viagem.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supervisor_centro_custo_association',
    sa.Column('supervisor_id', sa.Integer(), nullable=False),
    sa.Column('centro_custo_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['centro_custo_id'], ['centro_custo.id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervisor.id'], ),
    sa.PrimaryKeyConstraint('supervisor_id', 'centro_custo_id'),
    info={'bind_key': None}
    )
    op.create_table('supervisor_turno_association',
    sa.Column('supervisor_id', sa.Integer(), nullable=False),
    sa.Column('turno_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervisor.id'], ),
    sa.ForeignKeyConstraint(['turno_id'], ['turno.id'], ),
    sa.PrimaryKeyConstraint('supervisor_id', 'turno_id'),
    info={'bind_key': None}
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supervisor_turno_association')
    op.drop_table('supervisor_centro_custo_association')
    op.drop_table('solicitacao')
    with op.batch_alter_table('viagem_auditoria', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_viagem_auditoria_viagem_id'))
        batch_op.drop_index(batch_op.f('ix_viagem_auditoria_timestamp'))
        batch_op.drop_index(batch_op.f('ix_viagem_auditoria_motorista_id'))
        batch_op.drop_index(batch_op.f('ix_viagem_auditoria_action'))

    op.drop_table('viagem_auditoria')
    op.drop_table('supervisor')
    op.drop_table('gerente_centro_custo_association')
    op.drop_table('fin_receber_viagens')
    op.drop_table('fin_pagar_viagens')
    op.drop_table('colaborador_turno_association')
    op.drop_table('colaborador_centro_custo_association')
    op.drop_table('viagem')
    op.drop_table('turno')
    op.drop_table('gerente')
    op.drop_table('fin_contas_pagar')
    op.drop_table('colaborador')
    op.drop_table('bairro')
    op.drop_table('planta')
    op.drop_table('motorista')
    op.drop_table('fin_contas_receber')
    op.drop_table('centro_custo')
    op.drop_table('bloco')
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_log_timestamp'))
        batch_op.drop_index(batch_op.f('ix_audit_log_resource_type'))
        batch_op.drop_index(batch_op.f('ix_audit_log_resource_id'))
        batch_op.drop_index(batch_op.f('ix_audit_log_action'))

    op.drop_table('audit_log')
    op.drop_table('user')
    op.drop_table('empresa')
    op.drop_table('configuracao')
    # ### end Alembic commands ###
